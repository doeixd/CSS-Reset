/* ================================================ */
/* ==              LAYER DEFINITION              == */
/* ================================================ */
/* Defines the cascade order. Reset -> Defaults -> Theme -> Utilities -> Layouts. */
@layer reset, defaults, theme, utilities, layouts;

/* ================================================ */
/* ==               @layer reset                 == */
/* ================================================ */
/* Purpose: Neutralize browser styles, fix inconsistencies, */
/* establish predictable baseline behavior, and provide a clean */
/* slate with zero specificity (:where). */
@layer reset {

  /* --- Core Resets --- */
  :where(*, *::before, *::after) {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    vertical-align: baseline;
    min-width: 0;
    font: inherit;
    color: inherit;
    line-height: inherit;
  }

  /* --- Document Level --- */
  :where(html) {
    text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: none;
    tab-size: 4;
    height: 100%;
  }
  :where(body) {
    min-height: 100%;
  }

  /* --- Element Display & Behavior --- */
  :where(:is(img, picture, video, canvas, svg, :not(:defined))) {
    display: block;
    max-width: 100%;
    height: auto;
  }
  :where(svg) {
    fill: currentColor;
    stroke: currentColor;
    stroke-width: 0;
  }

  /* Form element normalization */
  :where(button, input, select, textarea) {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    border-radius: 0;
    background-color: transparent;
    letter-spacing: inherit;
    border: 1px solid transparent;
  }
  :where(button) {
    border: none;
    background: none;
    text-align: inherit;
  }
  :where(textarea) {
    resize: vertical;
    overflow: auto;
  }

  /* Default cursors */
  :where(button, select:not([disabled]), input[type="button"], input[type="submit"], input[type="reset"], input[type="checkbox"], input[type="radio"], label) {
    cursor: pointer;
  }
  :where(input[type="text"], input[type="email"], input[type="search"], input[type="url"], input[type="tel"], input[type="number"], input[type="password"], textarea) {
    cursor: text;
  }
  :where([disabled]) {
    cursor: not-allowed;
  }

  /* --- Text Element Resets --- */
  :where(p, h1, h2, h3, h4, h5, h6, li, dd, dt, blockquote) {
    overflow-wrap: break-word;
  }
  :where(h1, h2, h3, h4, h5, h6) {
    text-wrap: balance;
    font-size: inherit;
    font-weight: inherit;
  }
  :where(p, blockquote, li) {
    text-wrap: pretty;
  }
  :where(a) {
    text-decoration: inherit;
  }
  :where(abbr[title]) {
    text-decoration: underline dotted;
    cursor: help;
  }

  /* --- Other Element Resets --- */
  :where(table) {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
    border-spacing: 0;
  }
  :where(ul, ol) {
    list-style: none;
  }
  :where([src='']) { display: none; }
  :where(::backdrop) { all: unset; }
  :where(:not(html, body, svg, img, video, canvas, iframe, frame, object, embed, hr, :where(button, input, select, textarea), table, thead, tbody, tfoot, tr, th, td, details, summary, fieldset)) {
    border-style: solid;
    border-width: 0;
  }

  /* --- Accessibility & Utilities --- */
  :where([hidden]) { display: none !important; }
  :where(.visually-hidden:not(:focus):not(:active), .sr-only:not(:focus):not(:active)) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  /* --- Modern Feature Opt-ins --- */
  @view-transition {
    navigation: auto;
  }
} /* End of @layer reset */

/* ================================================ */
/* ==              @layer defaults               == */
/* ================================================ */
/* Purpose: Apply structural styles and basic appearance */
/* using variables defined in the @theme layer. */
@layer defaults {

  /* --- Base Body & Document Styles --- */
  body {
    font-family: var(--font-primary, sans-serif);
    color: var(--text-overt, #111); /* Use overt text as default body text */
    background-color: var(--base-bg, #fff);
    line-height: var(--body-line-height, 1.5);

    -webkit-font-smoothing: var(--font-smoothing-webkit, antialiased);
    -moz-osx-font-smoothing: var(--font-smoothing-moz, grayscale);
    font-synthesis: var(--font-synthesis, none);
    text-rendering: var(--text-rendering, optimizeLegibility);
    hyphens: var(--body-hyphens, auto);
    scroll-behavior: var(--scroll-behavior, smooth);
  }

  ::selection {
    background-color: var(--highlight-bg-overt, Highlight); /* Use overt highlight for selection */
    color: var(--text-on-highlight-overt, HighlightText);
  }

  /* --- Typography Defaults --- */
  h1, h2, h3, h4, h5, h6, p, ul, ol, dl, pre, blockquote, figure, table, hr, details {
    margin-block: 0 var(--space-flow, 1em);
  }
  :is(article, section, aside, div, li, dd, dt, blockquote) > :last-child {
    margin-block-end: 0;
  }

  h1, h2, h3, h4, h5, h6 {
    font-weight: var(--font-weight-heading, 600);
    line-height: var(--line-height-heading, 1.2);
    color: var(--text-heading, var(--text-overt, inherit));
    letter-spacing: var(--letter-spacing-heading, normal);
  }
  h1 { font-size: var(--font-size-h1, 2.5rem); }
  h2 { font-size: var(--font-size-h2, 2.0rem); }
  h3 { font-size: var(--font-size-h3, 1.75rem); }
  h4 { font-size: var(--font-size-h4, 1.5rem); }
  h5 { font-size: var(--font-size-h5, 1.25rem); }
  h6 { font-size: var(--font-size-h6, 1.0rem); letter-spacing: var(--letter-spacing-h6, 0.5px); text-transform: var(--text-transform-h6, uppercase); }

  p {
    line-height: var(--body-line-height, 1.6);
    color: var(--text-subtle, var(--text-overt, inherit)); /* Paragraphs often use subtle text */
  }

  /* Lists */
  ul, ol {
    padding-inline-start: var(--space-list-indent, 1.5em);
  }
  ul { list-style: var(--list-style-unordered, disc); }
  ol { list-style: var(--list-style-ordered, decimal); }
  li { margin-block-end: var(--space-list-item, 0.5em); }
  li > ul, li > ol {
    margin-block-start: var(--space-list-item, 0.5em);
    margin-block-end: 0;
  }
  dt { font-weight: var(--font-weight-medium, 500); color: var(--text-overt, inherit); }
  dd { padding-inline-start: var(--space-list-indent, 1.5em); color: var(--text-subtle, inherit); }
  dd + dt { margin-block-start: var(--space-md, 1rem); }

  /* Links */
  a {
    color: var(--text-link, var(--accent-text, blue)); /* Use text-link role */
    text-decoration: var(--link-decoration, none);
    transition: color var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                text-decoration-color var(--transition-duration, 200ms) var(--transition-timing, ease-out);
  }
  a:hover, a:focus-visible {
    color: var(--text-link-hover, var(--text-link, blue));
    text-decoration: var(--link-decoration-hover, underline);
    text-decoration-thickness: var(--link-underline-thickness, 1.5px);
    text-underline-offset: var(--link-underline-offset, 0.15em);
  }

  /* Code blocks and inline code */
  pre, code, kbd, samp {
    font-family: var(--font-mono, monospace);
    font-size: var(--font-size-code, 0.9em);
    line-height: var(--line-height-code, 1.4);
    color: var(--text-code, var(--text-overt, inherit));
  }
  pre {
    padding: var(--space-code-block-y, 0.8em) var(--space-code-block-x, 1em);
    border-radius: var(--radius-md, 6px);
    overflow-x: auto;
    border-width: var(--border-width, 1px);
    border-style: solid;
    /* Colors applied in @theme */
  }
  :not(pre) > code, kbd, samp {
    padding: var(--space-code-inline-y, 0.2em) var(--space-code-inline-x, 0.4em);
    border-radius: var(--radius-sm, 3px);
    border-width: var(--border-width, 1px);
    border-style: solid;
    /* Colors applied in @theme */
  }
  kbd {
    letter-spacing: 0.5px;
  }

  /* Blockquotes */
  blockquote {
    margin-inline: var(--space-blockquote-margin-inline, 1em);
    padding-inline-start: var(--space-blockquote-pad, 1em);
    border-inline-start-width: var(--border-width-blockquote, 3px);
    border-inline-start-style: solid;
    color: var(--text-blockquote, var(--text-subtle, inherit));
    /* Border color applied in @theme */
  }

  /* Horizontal Rule */
  hr {
    border: none;
    border-block-start-width: var(--border-width, 1px);
    border-block-start-style: solid;
    /* Color applied in @theme */
  }

  /* --- Form Element Defaults --- */
  input, select, textarea, fieldset {
    padding: var(--space-input-y, 0.6em) var(--space-input-x, 0.8em);
    border-width: var(--border-width, 1px);
    border-style: solid;
    border-radius: var(--radius-md, 6px);
    color: var(--text-input, var(--text-overt, inherit));
    font-size: var(--font-size-input, 1rem);
    transition: border-color var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                box-shadow var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                background-color var(--transition-duration, 200ms) var(--transition-timing, ease-out);
    width: 100%;
    /* Colors applied in @theme */
  }
  fieldset {
    padding: var(--space-fieldset-y, 1.5em) var(--space-fieldset-x, 1.2em);
    /* Border color applied in @theme */
  }
  legend {
    padding-inline: var(--space-xs, 0.5rem);
    font-weight: var(--font-weight-medium, 500);
    color: var(--text-overt, inherit);
  }
  input[type="checkbox"], input[type="radio"], input[type="submit"], input[type="button"], input[type="reset"], button {
    width: auto;
  }

  /* Button Structure */
  button, input[type="button"], input[type="submit"], input[type="reset"] {
    padding: var(--space-button-y, 0.7em) var(--space-button-x, 1.3em);
    border-radius: var(--radius-md, 6px);
    font-weight: var(--font-weight-button, 500);
    border-width: var(--border-width-button, 1px);
    border-style: solid;
    transition: background-color var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                border-color var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                color var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                box-shadow var(--transition-duration, 200ms) var(--transition-timing, ease-out),
                transform calc(var(--transition-duration, 200ms) / 2) var(--transition-timing, ease-out);
    line-height: 1;
    box-shadow: var(--shadow-button, none);
    /* Colors/borders applied via utility classes in @utilities */
  }
  button:hover:not([disabled]),
  input[type="button"]:hover:not([disabled]),
  input[type="submit"]:hover:not([disabled]),
  input[type="reset"]:hover:not([disabled]) {
    transform: var(--transform-button-hover, translateY(-1px));
    box-shadow: var(--shadow-button-hover, 0 2px 4px rgba(0,0,0,0.1));
  }
  button:active:not([disabled]),
  input[type="button"]:active:not([disabled]),
  input[type="submit"]:active:not([disabled]),
  input[type="reset"]:active:not([disabled]) {
    transform: var(--transform-button-active, translateY(0px));
    box-shadow: var(--shadow-button-active, none);
  }

  /* Select element structure */
  select {
    padding-right: var(--space-select-arrow-gap, calc(var(--space-input-x, 0.8em) * 3));
  }

  /* Checkbox/Radio structure */
  input[type="checkbox"], input[type="radio"] {
    appearance: var(--appearance-checkbox-radio, none);
    -webkit-appearance: none;
    -moz-appearance: none;
    border-width: var(--border-width, 1px);
    border-style: solid;
    width: var(--size-checkbox-radio, 1.1em);
    height: var(--size-checkbox-radio, 1.1em);
    margin-inline-end: var(--space-checkbox-radio-label-gap, 0.5em);
    vertical-align: middle;
    position: relative;
    display: inline-grid;
    place-content: center;
    /* Border color applied in @theme */
  }
  input[type="checkbox"] {
    border-radius: var(--radius-sm, 3px);
  }
  input[type="radio"] {
    border-radius: 50%;
  }
  /* Indicator using ::before, styled in @theme */
  input[type="checkbox"]::before, input[type="radio"]::before {
    content: '';
    width: 60%;
    height: 60%;
    transform: scale(0);
    transition: transform 100ms ease-in-out;
    box-shadow: inset 1em 1em var(--indicator-color, var(--accent-overt, blue)); /* Use overt accent */
  }
  input[type="radio"]::before {
    border-radius: 50%;
  }
  input[type="checkbox"]:checked::before, input[type="radio"]:checked::before {
    transform: scale(1);
  }

  /* Disabled State */
  button[disabled], input[disabled], select[disabled], textarea[disabled], fieldset[disabled] {
    opacity: var(--opacity-disabled, 0.5);
  }
  fieldset[disabled] * {
    cursor: not-allowed;
  }

  /* --- Table Defaults --- */
  table {
    width: 100%;
    border-width: var(--border-width, 1px);
    border-style: solid;
    border-radius: var(--radius-lg, 8px);
    overflow: hidden;
    /* Colors applied in @theme */
  }
  th, td {
    padding: var(--space-table-cell-y, 0.8em) var(--space-table-cell-x, 1em);
    text-align: left;
    vertical-align: top;
    border-bottom-width: var(--border-width, 1px);
    border-bottom-style: solid;
    /* Colors applied in @theme */
  }
  thead th {
    font-weight: var(--font-weight-heading, 600);
    border-bottom-width: calc(var(--border-width, 1px) * 2);
    vertical-align: bottom;
    /* Colors applied in @theme */
  }
  tbody tr:last-child th, tbody tr:last-child td {
    border-bottom: none;
  }

  /* --- Utilities Setup --- */
  .container {
    width: min(100% - (var(--space-container-padding, 1rem) * 2), var(--width-container-max, 1100px));
    margin-inline: auto;
  }
  .display-none { display: none !important; }

  .box {
    padding: var(--b-p, 0);
    margin: var(--b-m, 0);
    border-width: var(--b-bw, 0);
    border-style: solid;
    border-color: var(--b-bc, transparent);
    border-radius: var(--b-r, 0);
    background-color: var(--b-bg, transparent);
    color: var(--b-fg, inherit);
  }
  .box[style*="--b-px"] { padding-inline: var(--b-px); }
  .box[style*="--b-py"] { padding-block: var(--b-py); }
  .box[style*="--b-mx"] { margin-inline: var(--b-mx); }
  .box[style*="--b-my"] { margin-block: var(--b-my); }

  .cq-container, .cq {
    container-type: var(--cq-type, inline-size);
    container-name: var(--cq-name, default);
  }

  /* --- Accessibility Enhancements --- */
  :focus-visible {
    outline-style: solid;
    outline-width: var(--focus-ring-width, 2px);
    outline-offset: var(--focus-ring-offset, 2px);
    box-shadow: none;
    /* Outline color applied in @theme */
  }
  :target {
    scroll-margin-block-start: var(--space-target-margin, 5ex);
  }

  /* --- Reduced Motion Preferences --- */
  @media (prefers-reduced-motion: reduce) {
    html { scroll-behavior: auto !important; }
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      transition-delay: 0ms !important;
    }
  }

  /* --- View Transition Structure --- */
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation-duration: var(--transition-duration-page, 300ms);
    animation-timing-function: var(--transition-timing-page, ease-in-out);
  }
  ::view-transition-old(root) { animation-name: var(--view-transition-old, fade-out); }
  ::view-transition-new(root) { animation-name: var(--view-transition-new, fade-in); z-index: 1; }

  @keyframes fade-in { from { opacity: 0; } }
  @keyframes fade-out { to { opacity: 0; } }

} /* End of @layer defaults */


/* ================================================ */
/* ==               @layer theme                 == */
/* ================================================ */
/* Purpose: Define all design tokens (colors, fonts, spacing, */
/* radii, transitions, shadows) and apply theme-specific styles */
/* according to semantic roles. */
@layer theme {

:root {
  font-size: var(--font-size-root, 100%);

  /* --- Theme Configuration Inputs --- */
  --accent-l: 0.65; --accent-c: 0.15; --accent-h: 260; /* OKLCH Accent Color */
  --surface-c: 0.015; /* Base chroma for surfaces */
  --contrast-factor: 1.0; /* Adjust text contrast level */
  --contrast-lightness-threshold: 0.65; /* L* threshold for switching text color */
  --secondary-hue-shift: 60; /* For optional secondary palette */
  --tertiary-hue-shift: -90; /* For optional tertiary palette */
  --border-width: 1px;
  --border-width-thick: 2px;
  --border-width-blockquote: 3px;
  --border-width-button: 1px;
  --radius-sm: 3px; --radius-md: 6px; --radius-lg: 8px; --radius-xl: 12px; --radius-full: 9999px;
  --font-primary: 'Work Sans', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --font-mono: 'Courier New', Courier, monospace;
  --font-weight-normal: 400; --font-weight-medium: 500; --font-weight-semibold: 600; --font-weight-bold: 700;
  --font-weight-heading: var(--font-weight-semibold); --font-weight-button: var(--font-weight-medium);
  --letter-spacing-heading: normal; --letter-spacing-h6: 0.5px; --text-transform-h6: uppercase;
  --font-size-root: 100%; --font-size-sm: 0.875rem; --font-size-base: 1rem; --font-size-md: 1.125rem; --font-size-lg: 1.25rem; --font-size-xl: 1.5rem;
  --font-size-h6: var(--font-size-base); --font-size-h5: var(--font-size-lg); --font-size-h4: var(--font-size-xl);
  --font-size-h3: clamp(1.25rem, 2.5vi, 1.75rem); --font-size-h2: clamp(1.5rem, 3vi, 2.0rem); --font-size-h1: clamp(1.8rem, 4vi, 2.5rem);
  --font-size-code: 0.9em; --font-size-input: 1rem;
  --body-line-height: 1.6; --line-height-heading: 1.2; --line-height-code: 1.4;
  --space-unit: 1rem;
  --space-xxs: calc(var(--space-unit) * 0.25); --space-xs: calc(var(--space-unit) * 0.5); --space-sm: calc(var(--space-unit) * 0.75); --space-md: calc(var(--space-unit) * 1);
  --space-lg: calc(var(--space-unit) * 1.5); --space-xl: calc(var(--space-unit) * 2); --space-xxl: calc(var(--space-unit) * 3);
  --space-flow: var(--space-md); --space-list-indent: var(--space-lg); --space-list-item: var(--space-xs);
  --space-blockquote-margin-inline: var(--space-md); --space-blockquote-pad: var(--space-md);
  --space-code-block-y: var(--space-sm); --space-code-block-x: var(--space-md); --space-code-inline-y: var(--space-xxs); --space-code-inline-x: var(--space-xs);
  --space-input-y: var(--space-sm); --space-input-x: var(--space-md); --space-button-y: var(--space-sm); --space-button-x: var(--space-lg);
  --space-select-arrow-gap: calc(var(--space-input-x) * 3); --space-checkbox-radio-label-gap: var(--space-xs);
  --space-table-cell-y: var(--space-sm); --space-table-cell-x: var(--space-md); --space-container-padding: var(--space-md); --space-target-margin: var(--space-xxl);
  --space-fieldset-y: 1.5em; --space-fieldset-x: 1.2em;
  --transition-duration: 200ms; --transition-timing: ease-out; --transition-duration-page: 300ms; --transition-timing-page: ease-in-out;
  --transform-button-hover: translateY(-1px); --transform-button-active: translateY(0px);
  --view-transition-old: fade-out; --view-transition-new: fade-in;
  --focus-ring-width: 2px; --focus-ring-offset: 2px;
  --cq-bp-xs: 20em; --cq-bp-sm: 30em; --cq-bp-md: 45em; --cq-bp-lg: 60em; --cq-bp-xl: 80em;
  --cq-type: inline-size; --cq-name: default;
  --opacity-disabled: 0.5; --width-container-max: 1100px; --size-checkbox-radio: 1.1em;
  --font-smoothing-webkit: antialiased; --font-smoothing-moz: grayscale; --font-synthesis: none; --text-rendering: optimizeLegibility;
  --body-hyphens: auto; --scroll-behavior: smooth; --list-style-unordered: disc; --list-style-ordered: decimal;
  --link-decoration: none; --link-decoration-hover: underline; --link-underline-thickness: 1.5px; --link-underline-offset: 0.15em;
  --appearance-checkbox-radio: none;

  /* Shadows */
  --shadow-color-base: 220 10% 10%;
  --shadow-sm: 0 1px 2px oklch(from hsl(var(--shadow-color-base)) l c h / 7%);
  --shadow-md: 0 4px 6px -1px oklch(from hsl(var(--shadow-color-base)) l c h / 10%), 0 2px 4px -2px oklch(from hsl(var(--shadow-color-base)) l c h / 10%);
  --shadow-lg: 0 10px 15px -3px oklch(from hsl(var(--shadow-color-base)) l c h / 10%), 0 4px 6px -4px oklch(from hsl(var(--shadow-color-base)) l c h / 10%);
  --shadow-xl: 0 20px 25px -5px oklch(from hsl(var(--shadow-color-base)) l c h / 10%), 0 8px 10px -6px oklch(from hsl(var(--shadow-color-base)) l c h / 10%);
  --shadow-inner: inset 0 2px 4px 0 oklch(from hsl(var(--shadow-color-base)) l c h / 5%);
  --shadow-button: var(--shadow-sm);
  --shadow-button-hover: var(--shadow-md);
  --shadow-button-active: var(--shadow-inner);

  /* --- Helper function for contrast text --- */
  /* Usage: --text-on-color: oklch(var(--contrast-text) from var(--color-variable)); */
  --contrast-text: clamp(0.05, (var(--contrast-lightness-threshold) / l - 1) * 999, 0.98) min(c * 0.3, 0.05) h;

  /* --- Color Generation (Light Mode Defaults) --- */
  /* Base LCH parameters */
  --base-l-light: 0.98; --base-c-light: var(--surface-c); --base-h-light: var(--accent-h);
  --bedrock-l-light: 0.20; --bedrock-c-light: calc(var(--surface-c) * 1.2); --bedrock-h-light: var(--accent-h);
  --surface-muted-l-light: 0.995; --surface-muted-c-light: calc(var(--surface-c) * 0.5); --surface-muted-h-light: var(--accent-h);
  --surface-subtle-l-light: 0.99; --surface-subtle-c-light: calc(var(--surface-c) * 0.8); --surface-subtle-h-light: var(--accent-h);
  --surface-overt-l-light: 0.96; --surface-overt-c-light: var(--surface-c); --surface-overt-h-light: var(--accent-h);
  --text-overt-l-light: max(0.1, min(0.35, (1 - var(--base-l-light)) * var(--contrast-factor))); --text-overt-c-light: calc(var(--surface-c) * 1.8); --text-overt-h-light: var(--accent-h);
  --text-subtle-l-light: max(0.2, min(0.5, (1 - var(--base-l-light)) * var(--contrast-factor) * 0.7)); --text-subtle-c-light: var(--text-overt-c-light); --text-subtle-h-light: var(--accent-h);
  --outline-l-light: max(0.75, var(--base-l-light) - 0.12 * var(--contrast-factor)); --outline-c-light: var(--surface-c); --outline-h-light: var(--accent-h);

  /* --- Assign Light Mode Colors (Semantic Roles) --- */
  /* Base & Bedrock */
  --base-bg: oklch(var(--base-l-light) var(--base-c-light) var(--base-h-light));
  --bedrock-bg: oklch(var(--bedrock-l-light) var(--bedrock-c-light) var(--bedrock-h-light));
  --text-on-bedrock: oklch(var(--contrast-text) from var(--bedrock-bg));

  /* Surfaces */
  --surface-muted-bg: oklch(var(--surface-muted-l-light) var(--surface-muted-c-light) var(--surface-muted-h-light));
  --surface-subtle-bg: oklch(var(--surface-subtle-l-light) var(--surface-subtle-c-light) var(--surface-subtle-h-light));
  --surface-overt-bg: oklch(var(--surface-overt-l-light) var(--surface-overt-c-light) var(--surface-overt-h-light));
  --text-on-surface-muted: oklch(var(--contrast-text) from var(--surface-muted-bg));
  --text-on-surface-subtle: oklch(var(--contrast-text) from var(--surface-subtle-bg));
  --text-on-surface-overt: oklch(var(--contrast-text) from var(--surface-overt-bg));

  /* Text */
  --text-overt: oklch(var(--text-overt-l-light) var(--text-overt-c-light) var(--text-overt-h-light));
  --text-subtle: oklch(var(--text-subtle-l-light) var(--text-subtle-c-light) var(--text-subtle-h-light));
  --text-muted: oklch(from var(--text-subtle) l calc(c * 0.5) h / 70%);
  --text-heading: var(--text-overt);
  --text-blockquote: var(--text-subtle);
  --text-code: var(--text-overt);
  --text-input: var(--text-overt);
  --text-input-placeholder: var(--text-muted);
  --text-link: var(--accent-text); /* Default link to accent text */
  --text-link-hover: oklch(from var(--text-link) calc(l - 0.05) c h);
  --text-highlight-subtle: oklch(from var(--accent) l calc(c * 1.1) h); /* Example: slightly more chromatic accent */
  --text-highlight-overt: oklch(from var(--accent) calc(l - 0.05) calc(c * 1.2) h); /* Example: darker, more chromatic accent */
  --text-highlight-bg: oklch(from var(--accent) calc(l + (1-l)*0.8) calc(c * 0.3) h); /* Example: light accent bg */

  /* Outlines */
  --outline: oklch(var(--outline-l-light) var(--outline-c-light) var(--outline-h-light));
  --outline-subtle: oklch(from var(--outline) calc(l + (1-l)*0.2) c h);
  --outline-overt: oklch(from var(--outline) calc(l * 0.8) c h);
  --outline-muted: oklch(from var(--outline) l calc(c * 0.5) h / 50%); /* Fainter */
  --outline-focus: var(--accent);
  --outline-highlight-subtle: oklch(from var(--accent) calc(l + (1-l)*0.5) calc(c * 0.5) h);
  --outline-highlight-overt: var(--accent);

  /* Highlights (Backgrounds) */
  --highlight-bg-muted: oklch(from var(--base-bg) calc(l - 0.01) c h); /* Very subtle change for disabled hover? */
  --highlight-bg-subtle: oklch(from var(--base-bg) calc(l - 0.03) c h); /* Subtle hover */
  --highlight-bg-overt: oklch(from var(--accent) calc(l + (1-l)*0.6) calc(c * 0.4) h); /* Selected state */
  --text-on-highlight-muted: var(--text-subtle); /* Text on subtle highlights */
  --text-on-highlight-subtle: var(--text-overt); /* Text on subtle highlights */
  --text-on-highlight-overt: oklch(var(--contrast-text) from var(--highlight-bg-overt)); /* Text on overt highlights */

  /* Accent */
  --accent: oklch(var(--accent-l) var(--accent-c) var(--accent-h));
  --accent-text: var(--accent); /* Default accent text is the accent color */
  --accent-text-muted: oklch(from var(--accent-text) l calc(c * 0.6) h / 80%);
  --accent-text-subtle: oklch(from var(--accent-text) l calc(c * 0.8) h);
  --accent-text-overt: oklch(from var(--accent-text) calc(l - 0.05) calc(c * 1.1) h); /* Slightly darker/richer */
  --text-on-accent: oklch(var(--contrast-text) from var(--accent));
  --accent-bg-muted: oklch(from var(--accent) calc(l + (1-l)*0.9) calc(c * 0.15) h); /* Very light */
  --accent-bg-subtle: oklch(from var(--accent) calc(l + (1-l)*0.85) calc(c * 0.2) h);
  --accent-bg: var(--accent);
  --accent-bg-overt: oklch(from var(--accent) calc(l - 0.05) c h); /* Slightly darker */
  --accent-bg-hover: oklch(from var(--accent-bg) calc(l - 0.05) c h); /* Hover for default accent bg */
  --accent-bg-active: oklch(from var(--accent-bg) calc(l - 0.08) c h); /* Active for default accent bg */
  --accent-border-muted: oklch(from var(--accent) calc(l + (1-l)*0.7) calc(c * 0.3) h);
  --accent-border-subtle: oklch(from var(--accent) calc(l + (1-l)*0.3) calc(c * 0.6) h);
  --accent-border: var(--accent);
  --accent-border-overt: oklch(from var(--accent) calc(l - 0.1) c h);

  /* Feedback Colors */
  --error-l: 0.6; --error-c: 0.22; --error-h: 25;
  --warning-l: 0.7; --warning-c: 0.2; --warning-h: 70;
  --success-l: 0.65; --success-c: 0.2; --success-h: 145;
  --info-l: 0.7; --info-c: 0.18; --info-h: 230;
  --error: oklch(var(--error-l) var(--error-c) var(--error-h));
  --warning: oklch(var(--warning-l) var(--warning-c) var(--warning-h));
  --success: oklch(var(--success-l) var(--success-c) var(--success-h));
  --info: oklch(var(--info-l) var(--info-c) var(--info-h));
  --text-error: var(--error);
  --text-warning: var(--warning);
  --text-success: var(--success);
  --text-info: var(--info);
  --outline-error: var(--error);
  --outline-warning: var(--warning);
  --outline-success: var(--success);
  --outline-info: var(--info);
  --surface-error-bg: oklch(from var(--error) calc(l + (1-l)*0.85) calc(c * 0.3) h);
  --surface-warning-bg: oklch(from var(--warning) calc(l + (1-l)*0.85) calc(c * 0.3) h);
  --surface-success-bg: oklch(from var(--success) calc(l + (1-l)*0.85) calc(c * 0.3) h);
  --surface-info-bg: oklch(from var(--info) calc(l + (1-l)*0.85) calc(c * 0.3) h);
  --text-on-error: oklch(var(--contrast-text) from var(--error));
  --text-on-warning: oklch(var(--contrast-text) from var(--warning));
  --text-on-success: oklch(var(--contrast-text) from var(--success));
  --text-on-info: oklch(var(--contrast-text) from var(--info));

  /* Specific Component Roles */
  --indicator-color: var(--text-on-accent); /* Checkbox/Radio checkmark */
  --scrollbar-thumb-color: var(--outline-overt);
  --scrollbar-track-color: var(--surface-subtle-bg);
  --hr-color: var(--outline-subtle);
  --table-border: var(--outline);
  --table-header-bg: var(--surface-subtle-bg);
  --table-row-hover-bg: var(--highlight-bg-subtle);
  --code-block-bg: var(--surface-overt-bg);
  --code-block-border: var(--outline-subtle);
  --code-inline-bg: var(--surface-subtle-bg);
  --code-inline-border: var(--outline-subtle);
  --blockquote-border: var(--outline);
}

/* --- Color Generation (Dark Mode Overrides) --- */
@media (prefers-color-scheme: dark) {
  :root {
    /* Shadow Adjustment */
    --shadow-color-base: 220 20% 90%;
    --shadow-sm: 0 1px 2px oklch(from hsl(var(--shadow-color-base)) l c h / 10%);
    --shadow-md: 0 4px 6px -1px oklch(from hsl(var(--shadow-color-base)) l c h / 12%), 0 2px 4px -2px oklch(from hsl(var(--shadow-color-base)) l c h / 12%);
    --shadow-lg: 0 10px 15px -3px oklch(from hsl(var(--shadow-color-base)) l c h / 12%), 0 4px 6px -4px oklch(from hsl(var(--shadow-color-base)) l c h / 12%);
    --shadow-xl: 0 20px 25px -5px oklch(from hsl(var(--shadow-color-base)) l c h / 12%), 0 8px 10px -6px oklch(from hsl(var(--shadow-color-base)) l c h / 12%);
    --shadow-inner: inset 0 2px 4px 0 oklch(from hsl(var(--shadow-color-base)) l c h / 7%);

    /* Dark Mode Base LCH Parameters */
    --base-l-dark: 0.18; --base-c-dark: var(--surface-c); --base-h-dark: var(--accent-h);
    --bedrock-l-dark: 0.95; --bedrock-c-dark: calc(var(--surface-c) * 0.7); --bedrock-h-dark: var(--accent-h);
    --surface-muted-l-dark: 0.15; --surface-muted-c-dark: calc(var(--surface-c) * 0.8); --surface-muted-h-dark: var(--accent-h);
    --surface-subtle-l-dark: 0.23; --surface-subtle-c-dark: calc(var(--surface-c) * 1.2); --surface-subtle-h-dark: var(--accent-h);
    --surface-overt-l-dark: 0.28; --surface-overt-c-dark: calc(var(--surface-c) * 1.4); --surface-overt-h-dark: var(--accent-h);
    --text-overt-l-dark: max(0.9, min(0.98, (1 - var(--base-l-dark)) * var(--contrast-factor))); --text-overt-c-dark: calc(var(--surface-c) * 0.8); --text-overt-h-dark: var(--accent-h);
    --text-subtle-l-dark: max(0.7, min(0.85, (1 - var(--base-l-dark)) * var(--contrast-factor) * 0.8)); --text-subtle-c-dark: var(--text-overt-c-dark); --text-subtle-h-dark: var(--accent-h);
    --outline-l-dark: min(0.5, var(--base-l-dark) + 0.15 * var(--contrast-factor)); --outline-c-dark: var(--surface-c); --outline-h-dark: var(--accent-h);
    --accent-l-dark: max(0.7, var(--accent-l) + 0.1); --accent-c-dark: min(0.25, var(--accent-c) * 1.1); --accent-h-dark: var(--accent-h);

    /* --- Assign Dark Mode Colors (Semantic Roles) --- */
    /* Base & Bedrock */
    --base-bg: oklch(var(--base-l-dark) var(--base-c-dark) var(--base-h-dark));
    --bedrock-bg: oklch(var(--bedrock-l-dark) var(--bedrock-c-dark) var(--bedrock-h-dark));
    --text-on-bedrock: oklch(var(--contrast-text) from var(--bedrock-bg));

    /* Surfaces */
    --surface-muted-bg: oklch(var(--surface-muted-l-dark) var(--surface-muted-c-dark) var(--surface-muted-h-dark));
    --surface-subtle-bg: oklch(var(--surface-subtle-l-dark) var(--surface-subtle-c-dark) var(--surface-subtle-h-dark));
    --surface-overt-bg: oklch(var(--surface-overt-l-dark) var(--surface-overt-c-dark) var(--surface-overt-h-dark));
    --text-on-surface-muted: oklch(var(--contrast-text) from var(--surface-muted-bg));
    --text-on-surface-subtle: oklch(var(--contrast-text) from var(--surface-subtle-bg));
    --text-on-surface-overt: oklch(var(--contrast-text) from var(--surface-overt-bg));

    /* Text */
    --text-overt: oklch(var(--text-overt-l-dark) var(--text-overt-c-dark) var(--text-overt-h-dark));
    --text-subtle: oklch(var(--text-subtle-l-dark) var(--text-subtle-c-dark) var(--text-subtle-h-dark));
    --text-muted: oklch(from var(--text-subtle) l calc(c * 0.7) h / 70%);
    --text-link: var(--accent-text);
    --text-link-hover: oklch(from var(--text-link) calc(l + 0.05) c h);
    --text-highlight-subtle: oklch(from var(--accent) l calc(c * 1.1) h);
    --text-highlight-overt: oklch(from var(--accent) calc(l + 0.05) calc(c * 1.2) h); /* Lighter */
    --text-highlight-bg: oklch(from var(--accent) calc(l * 0.35) calc(c * 0.5) h); /* Darker accent bg */

    /* Outlines */
    --outline: oklch(var(--outline-l-dark) var(--outline-c-dark) var(--outline-h-dark));
    --outline-subtle: oklch(from var(--outline) calc(l - (l*0.2)) c h);
    --outline-overt: oklch(from var(--outline) calc(l + (1-l)*0.2) c h);
    --outline-muted: oklch(from var(--outline) l calc(c * 0.5) h / 50%);
    --outline-focus: var(--accent);
    --outline-highlight-subtle: oklch(from var(--accent) calc(l * 0.6) calc(c * 0.7) h);
    --outline-highlight-overt: var(--accent);

    /* Highlights (Backgrounds) */
    --highlight-bg-muted: oklch(from var(--base-bg) calc(l + 0.02) c h);
    --highlight-bg-subtle: oklch(from var(--base-bg) calc(l + 0.04) c h);
    --highlight-bg-overt: oklch(from var(--accent) calc(l * 0.5) calc(c * 0.6) h);
    --text-on-highlight-muted: var(--text-subtle);
    --text-on-highlight-subtle: var(--text-overt);
    --text-on-highlight-overt: oklch(var(--contrast-text) from var(--highlight-bg-overt));

    /* Accent */
    --accent: oklch(var(--accent-l-dark) var(--accent-c-dark) var(--accent-h-dark));
    --accent-text: var(--accent);
    --accent-text-muted: oklch(from var(--accent-text) l calc(c * 0.7) h / 80%);
    --accent-text-subtle: oklch(from var(--accent-text) l calc(c * 0.9) h);
    --accent-text-overt: oklch(from var(--accent-text) calc(l + 0.05) calc(c * 1.05) h); /* Slightly lighter */
    --text-on-accent: oklch(var(--contrast-text) from var(--accent));
    --accent-bg-muted: oklch(from var(--accent) calc(l * 0.25) calc(c * 0.3) h); /* Very dark */
    --accent-bg-subtle: oklch(from var(--accent) calc(l * 0.3) calc(c * 0.4) h);
    --accent-bg: var(--accent);
    --accent-bg-overt: oklch(from var(--accent) calc(l + 0.05) c h); /* Slightly lighter */
    --accent-bg-hover: oklch(from var(--accent-bg) calc(l + 0.05) c h);
    --accent-bg-active: oklch(from var(--accent-bg) calc(l + 0.08) c h);
    --accent-border-muted: oklch(from var(--accent) calc(l * 0.4) calc(c * 0.5) h);
    --accent-border-subtle: oklch(from var(--accent) calc(l * 0.7) calc(c * 0.8) h);
    --accent-border: var(--accent);
    --accent-border-overt: oklch(from var(--accent) calc(l + 0.1) c h);

    /* Feedback Colors */
    --error-l-dark: 0.7; --error-c-dark: 0.22; --error-h-dark: 25;
    --warning-l-dark: 0.8; --warning-c-dark: 0.2; --warning-h-dark: 70;
    --success-l-dark: 0.75; --success-c-dark: 0.2; --success-h-dark: 145;
    --info-l-dark: 0.8; --info-c-dark: 0.18; --info-h-dark: 230;
    --error: oklch(var(--error-l-dark) var(--error-c-dark) var(--error-h-dark));
    --warning: oklch(var(--warning-l-dark) var(--warning-c-dark) var(--warning-h-dark));
    --success: oklch(var(--success-l-dark) var(--success-c-dark) var(--success-h-dark));
    --info: oklch(var(--info-l-dark) var(--info-c-dark) var(--info-h-dark));
    --surface-error-bg: oklch(from var(--error) calc(l * 0.3) calc(c * 0.5) h);
    --surface-warning-bg: oklch(from var(--warning) calc(l * 0.3) calc(c * 0.5) h);
    --surface-success-bg: oklch(from var(--success) calc(l * 0.3) calc(c * 0.5) h);
    --surface-info-bg: oklch(from var(--info) calc(l * 0.3) calc(c * 0.5) h);
    /* Text/Outline vars inherit from light mode definitions */
    --text-on-error: oklch(var(--contrast-text) from var(--error));
    --text-on-warning: oklch(var(--contrast-text) from var(--warning));
    --text-on-success: oklch(var(--contrast-text) from var(--success));
    --text-on-info: oklch(var(--contrast-text) from var(--info));

    /* Specific Component Roles */
    --scrollbar-thumb-color: var(--outline-overt);
    --scrollbar-track-color: var(--surface-subtle-bg);
    --hr-color: var(--outline-subtle);
    --table-border: var(--outline);
    --table-header-bg: var(--surface-subtle-bg);
    --table-row-hover-bg: var(--highlight-bg-subtle);
    --code-block-bg: var(--surface-subtle-bg); /* Use subtle surface in dark */
    --code-block-border: var(--outline-subtle);
    --code-inline-bg: var(--surface-subtle-bg);
    --code-inline-border: var(--outline-subtle);
    --blockquote-border: var(--outline);
    /* --indicator-color inherits */
  }
} /* End of Dark Mode @media */

/* --- Apply Theme Specific Styles --- */
/* Apply colors/styles directly tied to the theme's visual identity */

/* Scrollbar Theming */
html {
  scrollbar-color: var(--scrollbar-thumb-color) var(--scrollbar-track-color);
  /* scrollbar-width: thin; */ /* Optional */
}

/* Code blocks */
pre { background-color: var(--code-block-bg); border-color: var(--code-block-border); color: var(--text-code); }
:not(pre) > code, kbd, samp { background-color: var(--code-inline-bg); border-color: var(--code-inline-border); color: var(--text-code); }

/* Blockquotes */
blockquote { border-inline-start-color: var(--blockquote-border); color: var(--text-blockquote); }

/* Horizontal Rule */
hr { border-block-start-color: var(--hr-color); }

/* Input styles */
input, select, textarea {
  background-color: var(--surface-subtle-bg); /* Use subtle surface for inputs */
  border-color: var(--outline);
  color: var(--text-input);
  &::placeholder {
    color: var(--text-input-placeholder);
    opacity: 1;
  }
}
input:hover, select:hover, textarea:hover {
  border-color: var(--outline-overt); /* Use overt outline on hover */
}
input:focus, select:focus, textarea:focus,
input:focus-visible, select:focus-visible, textarea:focus-visible {
  border-color: var(--outline-focus); /* Use focus outline color */
  outline-color: var(--outline-focus);
  outline-style: solid;
  outline-width: var(--focus-ring-width);
  outline-offset: var(--focus-ring-offset);
  box-shadow: none;
}
/* Invalid state styling */
input:invalid, select:invalid, textarea:invalid {
  border-color: var(--outline-error);
  outline-color: oklch(from var(--outline-error) l c h / 50%);
  outline-style: solid;
  outline-width: var(--focus-ring-width);
  outline-offset: var(--focus-ring-offset);
  box-shadow: none;
}
fieldset { border-color: var(--outline); }
legend { color: var(--text-overt); }

/* Custom Select Arrow */
select {
  background-image: linear-gradient(45deg, transparent 50%, var(--text-subtle) 50%), linear-gradient(135deg, var(--text-subtle) 50%, transparent 50%); /* Use subtle text for arrow */
  background-position: right var(--space-md) top 55%, right calc(var(--space-md) + 5px) top 55%;
  background-size: 5px 5px, 5px 5px;
  background-repeat: no-repeat;
}
select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 var(--text-input);
}

/* Checkbox/Radio Indicator Color */
input[type="checkbox"], input[type="radio"] {
  border-color: var(--outline);
}
input[type="checkbox"]:checked, input[type="radio"]:checked {
  background-color: var(--accent);
  border-color: var(--accent-border); /* Use accent border */
}
input[type="checkbox"]::before, input[type="radio"]::before {
  box-shadow: inset 1em 1em var(--indicator-color); /* Color defined in role variables */
}
input[type="checkbox"]:hover:not(:checked), input[type="radio"]:hover:not(:checked) {
  border-color: var(--outline-overt);
}

/* Button Base Styles are in defaults. Utilities apply variants. */

/* Table styles */
table { border-color: var(--table-border); }
th, td { border-bottom-color: var(--table-border); }
thead th { background-color: var(--table-header-bg); color: var(--text-heading); }
tbody tr:hover { background-color: var(--table-row-hover-bg); }

/* Focus Ring Color */
:focus-visible {
  outline-color: var(--outline-focus);
}

} /* End of @layer theme */


/* ================================================ */
/* ==             @layer utilities               == */
/* ================================================ */
/* Purpose: Provide helpful utility classes for applying semantic */
/* color roles and other common styling patterns. */
@layer utilities {

  /* --- Background Color Utilities --- */
  .bg-base { background-color: var(--base-bg); }
  .bg-bedrock { background-color: var(--bedrock-bg); }
  .bg-surface-muted { background-color: var(--surface-muted-bg); }
  .bg-surface-subtle { background-color: var(--surface-subtle-bg); }
  .bg-surface-overt { background-color: var(--surface-overt-bg); }
  .bg-accent-muted { background-color: var(--accent-bg-muted); }
  .bg-accent-subtle { background-color: var(--accent-bg-subtle); }
  .bg-accent { background-color: var(--accent-bg); }
  .bg-accent-overt { background-color: var(--accent-bg-overt); }
  .bg-highlight-muted { background-color: var(--highlight-bg-muted); }
  .bg-highlight-subtle { background-color: var(--highlight-bg-subtle); }
  .bg-highlight-overt { background-color: var(--highlight-bg-overt); }
  .bg-text-highlight { background-color: var(--text-highlight-bg); }
  .bg-error { background-color: var(--surface-error-bg); }
  .bg-warning { background-color: var(--surface-warning-bg); }
  .bg-success { background-color: var(--surface-success-bg); }
  .bg-info { background-color: var(--surface-info-bg); }
  .bg-transparent { background-color: transparent; }

  /* --- Text Color Utilities --- */
  .text-overt { color: var(--text-overt); }
  .text-subtle { color: var(--text-subtle); }
  .text-muted { color: var(--text-muted); }
  .text-accent-muted { color: var(--accent-text-muted); }
  .text-accent-subtle { color: var(--accent-text-subtle); }
  .text-accent { color: var(--accent-text); }
  .text-accent-overt { color: var(--accent-text-overt); }
  .text-on-accent { color: var(--text-on-accent); }
  .text-on-bedrock { color: var(--text-on-bedrock); }
  .text-on-surface-muted { color: var(--text-on-surface-muted); }
  .text-on-surface-subtle { color: var(--text-on-surface-subtle); }
  .text-on-surface-overt { color: var(--text-on-surface-overt); }
  .text-on-highlight-muted { color: var(--text-on-highlight-muted); }
  .text-on-highlight-subtle { color: var(--text-on-highlight-subtle); }
  .text-on-highlight-overt { color: var(--text-on-highlight-overt); }
  .text-link { color: var(--text-link); }
  .text-highlight-subtle { color: var(--text-highlight-subtle); }
  .text-highlight-overt { color: var(--text-highlight-overt); }
  .text-error { color: var(--text-error); }
  .text-warning { color: var(--text-warning); }
  .text-success { color: var(--text-success); }
  .text-info { color: var(--text-info); }
  .text-on-error { color: var(--text-on-error); }
  .text-on-warning { color: var(--text-on-warning); }
  .text-on-success { color: var(--text-on-success); }
  .text-on-info { color: var(--text-on-info); }
  .text-inherit { color: inherit; }

  /* --- Border Color Utilities --- */
  .border-outline-muted { border-color: var(--outline-muted); }
  .border-outline-subtle { border-color: var(--outline-subtle); }
  .border-outline { border-color: var(--outline); }
  .border-outline-overt { border-color: var(--outline-overt); }
  .border-accent-muted { border-color: var(--accent-border-muted); }
  .border-accent-subtle { border-color: var(--accent-border-subtle); }
  .border-accent { border-color: var(--accent-border); }
  .border-accent-overt { border-color: var(--accent-border-overt); }
  .border-outline-highlight-subtle { border-color: var(--outline-highlight-subtle); }
  .border-outline-highlight-overt { border-color: var(--outline-highlight-overt); }
  .border-outline-error { border-color: var(--outline-error); }
  .border-outline-warning { border-color: var(--outline-warning); }
  .border-outline-success { border-color: var(--outline-success); }
  .border-outline-info { border-color: var(--outline-info); }
  .border-transparent { border-color: transparent; }
  /* Side-specific examples (Combine with border utility: e.g., .border-b .border-outline-subtle) */
  .border-b-outline-subtle { border-bottom-color: var(--outline-subtle); }
  .border-t-accent-overt { border-top-color: var(--accent-border-overt); }

  /* --- Button Variants (Mapping roles) --- */
  /* Primary Button (Filled, Accent Overt) */
  .button-primary {
    background-color: var(--accent-bg);
    color: var(--text-on-accent);
    border-color: transparent; /* Often no border on primary */
  }
  .button-primary:hover:not([disabled]) { background-color: var(--accent-bg-hover); }
  .button-primary:active:not([disabled]) { background-color: var(--accent-bg-active); }

  /* Outline Button (Accent Subtle) */
  .button-outline {
    background-color: transparent;
    color: var(--accent-text);
    border-color: var(--accent-border); /* Use default accent border */
  }
  .button-outline:hover:not([disabled]) { background-color: var(--accent-bg-subtle); }
  .button-outline:active:not([disabled]) { background-color: oklch(from var(--accent-bg-subtle) calc(l - 0.03) c h); } /* Slightly darker subtle bg */

  /* Text Button (Accent Muted Interaction) */
  .button-text {
    background-color: transparent;
    color: var(--accent-text);
    border-color: transparent;
    box-shadow: none;
  }
  .button-text:hover:not([disabled]) { background-color: var(--accent-bg-subtle); }
  .button-text:active:not([disabled]) { background-color: oklch(from var(--accent-bg-subtle) calc(l - 0.03) c h); }

  /* --- Box Model & Spacing Utilities --- */
  /* Padding (Sets --b-* vars for .box component) */
  .p-0 { --b-p: 0; } .p-xxs { --b-p: var(--space-xxs); } .p-xs { --b-p: var(--space-xs); } .p-sm { --b-p: var(--space-sm); } .p-md { --b-p: var(--space-md); } .p-lg { --b-p: var(--space-lg); } .p-xl { --b-p: var(--space-xl); } .p-xxl { --b-p: var(--space-xxl); }
  .px-0 { --b-px: 0; } .px-xxs { --b-px: var(--space-xxs); } .px-xs { --b-px: var(--space-xs); } .px-sm { --b-px: var(--space-sm); } .px-md { --b-px: var(--space-md); } .px-lg { --b-px: var(--space-lg); } .px-xl { --b-px: var(--space-xl); } .px-xxl { --b-px: var(--space-xxl); }
  .py-0 { --b-py: 0; } .py-xxs { --b-py: var(--space-xxs); } .py-xs { --b-py: var(--space-xs); } .py-sm { --b-py: var(--space-sm); } .py-md { --b-py: var(--space-md); } .py-lg { --b-py: var(--space-lg); } .py-xl { --b-py: var(--space-xl); } .py-xxl { --b-py: var(--space-xxl); }

  /* Margin (Sets --b-* vars for .box component, applies mx-auto directly) */
  .m-0 { --b-m: 0; } .m-xxs { --b-m: var(--space-xxs); } .m-xs { --b-m: var(--space-xs); } .m-sm { --b-m: var(--space-sm); } .m-md { --b-m: var(--space-md); } .m-lg { --b-m: var(--space-lg); } .m-xl { --b-m: var(--space-xl); } .m-xxl { --b-m: var(--space-xxl); }
  .mx-auto { margin-inline: auto; }
  .mx-0 { --b-mx: 0; } .mx-xxs { --b-mx: var(--space-xxs); } .mx-xs { --b-mx: var(--space-xs); } .mx-sm { --b-mx: var(--space-sm); } .mx-md { --b-mx: var(--space-md); } .mx-lg { --b-mx: var(--space-lg); } .mx-xl { --b-mx: var(--space-xl); } .mx-xxl { --b-mx: var(--space-xxl); }
  .my-0 { --b-my: 0; } .my-xxs { --b-my: var(--space-xxs); } .my-xs { --b-my: var(--space-xs); } .my-sm { --b-my: var(--space-sm); } .my-md { --b-my: var(--space-md); } .my-lg { --b-my: var(--space-lg); } .my-xl { --b-my: var(--space-xl); } .my-xxl { --b-my: var(--space-xxl); }

  /* --- Layout Utilities --- */
  .block { display: block; } .inline-block { display: inline-block; } .inline { display: inline; }
  .flex { display: flex; } .inline-flex { display: inline-flex; }
  .grid { display: grid; } .inline-grid { display: inline-grid; }
  .flow-root { display: flow-root; }
  .hidden { display: none; }

  /* Flexbox */
  .flex-row { flex-direction: row; } .flex-row-reverse { flex-direction: row-reverse; }
  .flex-col { flex-direction: column; } .flex-col-reverse { flex-direction: column-reverse; }
  .flex-wrap { flex-wrap: wrap; } .flex-wrap-reverse { flex-wrap: wrap-reverse; } .flex-nowrap { flex-wrap: nowrap; }
  .flex-1 { flex: 1 1 0%; } .flex-auto { flex: 1 1 auto; } .flex-initial { flex: 0 1 auto; } .flex-none { flex: none; }
  .items-start { align-items: flex-start; } .items-center { align-items: center; } .items-end { align-items: flex-end; } .items-baseline { align-items: baseline; } .items-stretch { align-items: stretch; }
  .justify-start { justify-content: flex-start; } .justify-center { justify-content: center; } .justify-end { justify-content: flex-end; }
  .justify-between { justify-content: space-between; } .justify-around { justify-content: space-around; } .justify-evenly { justify-content: space-evenly; }
  .gap-0 { gap: 0; } .gap-xxs { gap: var(--space-xxs); } .gap-xs { gap: var(--space-xs); } .gap-sm { gap: var(--space-sm); } .gap-md { gap: var(--space-md); } .gap-lg { gap: var(--space-lg); } .gap-xl { gap: var(--space-xl); } .gap-xxl { gap: var(--space-xxl); }

  /* Grid */
  .grid-cols-1 { grid-template-columns: repeat(1, minmax(0, 1fr)); } .grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); } .grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
  .grid-cols-4 { grid-template-columns: repeat(4, minmax(0, 1fr)); } .grid-cols-5 { grid-template-columns: repeat(5, minmax(0, 1fr)); } .grid-cols-6 { grid-template-columns: repeat(6, minmax(0, 1fr)); }
  .grid-rows-auto { grid-auto-rows: auto; } .grid-rows-min { grid-auto-rows: min-content; } .grid-rows-max { grid-auto-rows: max-content; } .grid-rows-fr { grid-auto-rows: minmax(0, 1fr); }

  /* --- Border & Radius Utilities --- */
  /* Border Width */
  .border { border-width: var(--border-width); border-style: solid; }
  .border-0 { border-width: 0; } .border-2 { border-width: var(--border-width-thick); border-style: solid; }
  .border-t { border-top-width: var(--border-width); border-top-style: solid; } .border-r { border-right-width: var(--border-width); border-right-style: solid; }
  .border-b { border-bottom-width: var(--border-width); border-bottom-style: solid; } .border-l { border-left-width: var(--border-width); border-left-style: solid; }
  .border-x { border-left-width: var(--border-width); border-right-width: var(--border-width); border-left-style: solid; border-right-style: solid; }
  .border-y { border-top-width: var(--border-width); border-bottom-width: var(--border-width); border-top-style: solid; border-bottom-style: solid; }

  /* Border Radius */
  .radius-0 { --b-r: 0; border-radius: 0;}
  .radius-sm { --b-r: var(--radius-sm); border-radius: var(--radius-sm); } .radius-md { --b-r: var(--radius-md); border-radius: var(--radius-md); }
  .radius-lg { --b-r: var(--radius-lg); border-radius: var(--radius-lg); } .radius-xl { --b-r: var(--radius-xl); border-radius: var(--radius-xl); }
  .radius-full { --b-r: var(--radius-full); border-radius: var(--radius-full); }

  /* --- Typography Utilities --- */
  .text-left { text-align: left; } .text-center { text-align: center; } .text-right { text-align: right; } .text-justify { text-align: justify; }
  .font-normal { font-weight: var(--font-weight-normal); } .font-medium { font-weight: var(--font-weight-medium); }
  .font-semibold { font-weight: var(--font-weight-semibold); } .font-bold { font-weight: var(--font-weight-bold); }
  .italic { font-style: italic; } .not-italic { font-style: normal; }
  .underline { text-decoration-line: underline; } .line-through { text-decoration-line: line-through; } .no-underline { text-decoration-line: none; }
  .uppercase { text-transform: uppercase; } .lowercase { text-transform: lowercase; } .capitalize { text-transform: capitalize; } .normal-case { text-transform: none; }

  /* --- Shadow Utilities --- */
  .shadow-sm { box-shadow: var(--shadow-sm); } .shadow-md { box-shadow: var(--shadow-md); } .shadow-lg { box-shadow: var(--shadow-lg); }
  .shadow-xl { box-shadow: var(--shadow-xl); } .shadow-inner { box-shadow: var(--shadow-inner); } .shadow-none { box-shadow: none; }

  /* --- Container Query Utilities --- */
  .cq-type-inline { container-type: inline-size; } .cq-type-size { container-type: size; }
  .cq-name-card { container-name: card; } .cq-name-sidebar { container-name: sidebar; }

  /* --- Other Utilities --- */
  .overflow-auto { overflow: auto; } .overflow-hidden { overflow: hidden; } .overflow-visible { overflow: visible; } .overflow-scroll { overflow: scroll; }
  .overflow-x-auto { overflow-x: auto; } .overflow-y-auto { overflow-y: auto; }

  .static { position: static; } .relative { position: relative; } .absolute { position: absolute; } .fixed { position: fixed; } .sticky { position: sticky; top: 0; }

} /* End of @layer utilities */


/* ================================================ */
/* ==               @layer layouts               == */
/* ================================================ */
/* Purpose: Provide responsive layout primitives using Grid and */
/* Flexbox, leveraging theme variables. */
@layer layouts {

  /* --- General Layout Container --- */
  .l-container {
    container-type: var(--l-container-type, inline-size);
    container-name: var(--l-container-name, layout);
  }

  /* ================== Grid Layouts ================== */
  .l-grid {
    display: grid;
    gap: var(--l-grid-gap, var(--space-md));
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, var(--l-grid-min-item-size, 15rem)), 1fr)
    );
    container-type: inline-size;
    container-name: layout-grid;
  }
  .l-grid > * { min-width: 0; }
  @container layout-grid (min-width: var(--cq-bp-sm, 30em)) {
    .l-grid--cols-2\@sm { grid-template-columns: repeat(2, 1fr); }
    .l-grid--cols-3\@sm { grid-template-columns: repeat(3, 1fr); }
    .l-grid--cols-4\@sm { grid-template-columns: repeat(4, 1fr); }
  }
  @container layout-grid (min-width: var(--cq-bp-md, 45em)) {
    .l-grid--cols-2\@md { grid-template-columns: repeat(2, 1fr); }
    .l-grid--cols-3\@md { grid-template-columns: repeat(3, 1fr); }
    .l-grid--cols-4\@md { grid-template-columns: repeat(4, 1fr); }
    .l-grid--cols-5\@md { grid-template-columns: repeat(5, 1fr); }
    .l-grid--cols-6\@md { grid-template-columns: repeat(6, 1fr); }
  }

  .l-two-col {
    display: grid;
    gap: var(--l-two-col-gap, var(--space-lg));
    container-type: inline-size;
    container-name: layout-two-col;
    grid-template-columns: 1fr;
  }
  .l-two-col > * { min-width: 0; }
  @container layout-two-col (min-width: var(--l-two-col-breakpoint, var(--cq-bp-sm, 30em))) {
    .l-two-col { grid-template-columns: 1fr 1fr; }
    .l-two-col--1-2 { grid-template-columns: 1fr 2fr; }
    .l-two-col--2-1 { grid-template-columns: 2fr 1fr; }
    .l-two-col--auto-1 { grid-template-columns: auto 1fr; }
    .l-two-col--1-auto { grid-template-columns: 1fr auto; }
  }

  .l-split {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--l-split-gap, var(--space-lg));
    container-type: inline-size;
    container-name: layout-split;
  }
  .l-split > * { min-width: 0; }
  @container layout-split (min-width: var(--l-split-breakpoint, var(--cq-bp-sm, 30em))) {
    .l-split {
        grid-template-columns: var(--l-split-fraction, 1fr) 1fr;
    }
  }
  .l-split--no-stack {
      grid-template-columns: var(--l-split-fraction, 1fr) 1fr;
  }

  /* ================= Flexbox Layouts ================= */
  .l-row {
    display: flex;
    flex-wrap: var(--l-row-wrap, wrap);
    gap: var(--l-row-gap, var(--space-md));
    container-type: inline-size;
    container-name: layout-row;
    flex-direction: column;
    align-items: var(--l-row-align-stacked, stretch);
  }
  .l-row > * { min-width: 0; }
  @container layout-row (min-width: var(--l-row-stack-breakpoint, var(--cq-bp-xs, 20em))) {
    .l-row:not(.l-row--force-stack) {
      flex-direction: var(--l-row-direction, row);
      align-items: var(--l-row-align, center);
      justify-content: var(--l-row-justify, flex-start);
    }
  }
  .l-row--no-stack {
      flex-direction: var(--l-row-direction, row);
      align-items: var(--l-row-align, center);
      justify-content: var(--l-row-justify, flex-start);
  }

  .l-stack {
    display: flex;
    flex-direction: column;
    justify-content: var(--l-stack-justify, flex-start);
    align-items: var(--l-stack-align, stretch);
    gap: var(--l-stack-gap, var(--space-md));
  }

  .l-cluster {
    display: flex;
    flex-wrap: wrap;
    gap: var(--l-cluster-gap, var(--space-sm));
    justify-content: var(--l-cluster-justify, flex-start);
    align-items: var(--l-cluster-align, center);
  }

  .l-reel {
    display: flex;
    gap: var(--l-reel-gap, var(--space-md));
    overflow-x: auto;
    overflow-y: hidden;
    scrollbar-width: thin;
    scrollbar-color: var(--scrollbar-thumb-color, grey) var(--scrollbar-track-color, transparent);
    -webkit-overflow-scrolling: touch;
  }
  .l-reel--no-scrollbar { scrollbar-width: none; }
  .l-reel--no-scrollbar::-webkit-scrollbar { display: none; }
  .l-reel > * { flex-shrink: 0; }
  .l-reel > img { height: 100%; max-height: var(--l-reel-item-max-height, 100%); width: auto; flex-basis: auto; }

  .l-switcher {
    display: flex;
    flex-wrap: wrap;
    gap: var(--l-switcher-gap, var(--space-sm));
  }
  .l-switcher > * {
    flex-grow: 1;
    flex-basis: calc((var(--l-switcher-threshold, 20rem) - 100%) * 999);
  }

  .l-spread {
    display: flex;
    flex-direction: var(--l-spread-direction, row);
    justify-content: space-between;
    align-items: var(--l-spread-align, center);
    gap: var(--l-spread-gap, var(--space-md));
  }

  /* ================= Wrapper Components ================= */
  .l-pad {
    padding: var(--l-pad-padding, var(--space-md));
    padding-inline: var(--l-pad-padding-x, var(--l-pad-padding, var(--space-md)));
    padding-block: var(--l-pad-padding-y, var(--l-pad-padding, var(--space-md)));
  }

  .l-center-content {
    box-sizing: content-box;
    margin-inline: auto;
    max-width: var(--l-center-content-max-width, var(--width-container-max, 60ch));
    padding-inline: var(--l-center-content-gutter, 0);
    text-align: var(--l-center-content-text-align, initial);
  }

  .l-cover {
    display: grid;
    place-content: var(--l-cover-place-content, center);
    place-items: var(--l-cover-place-items, center);
    padding: var(--l-cover-padding, var(--space-lg));
    min-height: var(--l-cover-min-height, 50vh);
    overflow: hidden;
    text-align: var(--l-cover-text-align, center);
  }

  .l-frame {
    position: relative;
    overflow: hidden;
    aspect-ratio: var(--l-frame-ratio, 16 / 9);
  }
  .l-frame > :first-child {
    position: absolute; top: 0; left: 0; width: 100%; height: 100%;
    object-fit: var(--l-frame-object-fit, cover);
    object-position: var(--l-frame-object-position, center);
  }

 .l-center {
    display: flex;
    justify-content: var(--l-center-justify, center);
    align-items: var(--l-center-align, center);
    min-height: var(--l-center-min-height, auto);
    padding: var(--l-center-padding, 0);
 }
 .l-center--h { align-items: initial; }
 .l-center--v { justify-content: initial; }

 /* ================= Complex/Specific Layouts ================= */
 .l-sidebar {
    display: grid;
    gap: var(--l-sidebar-gap, var(--space-lg));
    container-type: inline-size;
    container-name: layout-sidebar;
    grid-template-areas: "content" "sidebar";
 }
 .l-sidebar > *:not(.l-sidebar__aside) { grid-area: content; min-width: 0; }
 .l-sidebar > .l-sidebar__aside { grid-area: sidebar; min-width: 0; width: 100%; }
 @container layout-sidebar (min-width: var(--l-sidebar-breakpoint, var(--cq-bp-md, 45em))) {
    .l-sidebar {
        grid-template-columns: var(--l-sidebar-width, minmax(15rem, 25%)) 1fr;
        grid-template-areas: "sidebar content";
    }
    .l-sidebar > .l-sidebar__aside { width: auto; }
    .l-sidebar--right {
        grid-template-columns: 1fr var(--l-sidebar-width, minmax(15rem, 25%));
        grid-template-areas: "content sidebar";
    }
 }

 .l-standard-page {
    display: grid;
    grid-template-rows: auto 1fr auto;
    min-height: var(--l-standard-page-min-height, 100vh);
    gap: var(--l-standard-page-gap, 0);
 }
 .l-standard-page > * { min-width: 0; }
 .l-standard-page__header { grid-row: 1; }
 .l-standard-page__main { grid-row: 2; }
 .l-standard-page__footer { grid-row: 3; }

 .l-media {
    display: flex;
    align-items: var(--l-media-align, flex-start);
    gap: var(--l-media-gap, var(--space-md));
 }
 .l-media > :first-child { flex-shrink: 0; }
 .l-media > :last-child { flex-grow: 1; min-width: 0; }
 .l-media--reverse { flex-direction: row-reverse; }

 .l-tabs {
    display: flex;
    flex-direction: column;
    gap: var(--l-tabs-gap, var(--space-md));
 }
 .l-tabs__list { flex-shrink: 0; }
 .l-tabs__panel { flex-grow: 1; min-height: 0; }
 .l-tabs--bottom { flex-direction: column-reverse; }
 .l-tabs--left { flex-direction: row; }
 .l-tabs--right { flex-direction: row-reverse; }
 .l-tabs--left > .l-tabs__panel,
 .l-tabs--right > .l-tabs__panel { min-width: 0; }
 .l-tabs--left > .l-tabs__list,
 .l-tabs--right > .l-tabs__list { width: var(--l-tabs-side-width, max-content); flex-shrink: 0; }

} /* End of @layer layouts */
